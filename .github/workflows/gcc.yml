# This is a basic workflow to help you get started with Actions

name: gcc
on: [pull_request, push, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install GCC
        uses: egor-tensin/setup-gcc@v1

      - name: Compile CLox Debug
        run: gcc -Wall -Og *.c -o clox.exe

      - name: Compile CLox Release
        run: gcc -O3 *.c -o clox.release.exe
      
      - name: Upload to commit-builds
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        uses: EndBug/add-and-commit@v7.2.0
        with:
          add: "['clox', 'clox_release']"
          branch: commit-builds
          default_author: github_actions
          message: Build for "${{ github.event.head_commit.message }}" (Ubuntu)

  build-windows:
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Install MinGW
        uses: egor-tensin/setup-mingw@v2

      - name: Compile CLox Debug
        run: gcc -Wall -Og *.c -o clox

      - name: Compile CLox Release
        run: gcc -O3 *.c -o clox_release

      - name: Upload to commit-builds
        continue-on-error: true
        if: ${{ github.event_name == 'push' }}
        uses: EndBug/add-and-commit@v7.2.0
        with:
          add: "['clox.exe', 'clox.release.exe']"
          branch: commit-builds
          default_author: github_actions
          message: Build for "${{ github.event.head_commit.message }}" (Windows)
